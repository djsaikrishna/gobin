name: CLI

on:
  push:
    paths-ignore:
      - "*.md"
      - "gobin/**"
      - "sql/**"
      - "styles/**"
  release:
    types: [ published ]

permissions:
  contents: read

jobs:
  cli-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [ "linux", "windows", "darwin" ]
        goarch: [ "amd64", "386", "arm", "arm64" ]
        exclude:
          - goos: "darwin"
            goarch: "386"
          - goos: "darwin"
            goarch: "arm"
          - goos: "windows"
            goarch: "arm"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23.x
          cache: true

      - name: File Extension Windows
        if: ${{ matrix.goos == 'windows' }}
        run: echo "file_extension=.exe" >> $GITHUB_ENV

      - name: Create Dist Folder
        run: mkdir dist

      - name: Build
        run: |
          CGO_ENABLED=0
          GOOS=${{ matrix.goos }}
          GOARCH=${{ matrix.goarch }}
          go build -o dist/gobin-${{ matrix.goos }}-${{ matrix.goarch }}${{ env.file_name }} github.com/topi314/gobin/v3/cli

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: gobin-${{ matrix.goos }}-${{ matrix.goarch }}
          path: dist/*

      - name: Release
        if: ${{ github.event_name == 'release' }}
        uses: ncipollo/release-action@v1
        with:
          artifacts: dist/*
          allowUpdates: true
          omitBodyDuringUpdate: true
          omitDraftDuringUpdate: true
          omitNameDuringUpdate: true
          omitPrereleaseDuringUpdate: true
